<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cyrus.final_job.dao.system.UserDao">

    <resultMap type="com.cyrus.final_job.entity.system.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="userFace" column="user_face" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="idCard" column="id_card" jdbcType="VARCHAR"/>
        <result property="wedlock" column="wedlock" jdbcType="INTEGER"/>
        <result property="nationId" column="nation_id" jdbcType="INTEGER"/>
        <result property="nativePlace" column="native_place" jdbcType="VARCHAR"/>
        <result property="politicsId" column="politics_id" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
        <result property="positionId" column="position_id" jdbcType="INTEGER"/>
        <result property="topDegree" column="top_degree" jdbcType="INTEGER"/>
        <result property="specialty" column="specialty" jdbcType="VARCHAR"/>
        <result property="school" column="school" jdbcType="VARCHAR"/>
        <result property="workState" column="work_state" jdbcType="INTEGER"/>
        <result property="workId" column="work_id" jdbcType="BIGINT"/>
        <result property="contractTerm" column="contract_term" jdbcType="INTEGER"/>
        <result property="workAge" column="work_age" jdbcType="DOUBLE"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="conversionTime" column="conversion_time" jdbcType="TIMESTAMP"/>
        <result property="departureTime" column="departure_time" jdbcType="TIMESTAMP"/>
        <result property="beginContractTime" column="begin_contract_time" jdbcType="TIMESTAMP"/>
        <result property="endContractTime" column="end_contract_time" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="UserVoMap" type="com.cyrus.final_job.entity.vo.UserDetailVo">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="INTEGER"/>
        <result property="birthday" column="birthday" jdbcType="TIMESTAMP"/>
        <result property="idCard" column="id_card" jdbcType="VARCHAR"/>
        <result property="wedlock" column="wedlock" jdbcType="INTEGER"/>
        <result property="nationId" column="nation_id" jdbcType="INTEGER"/>
        <result property="nativePlace" column="native_place" jdbcType="VARCHAR"/>
        <result property="politicsId" column="politics_id" jdbcType="INTEGER"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
        <result property="departmentId" column="department_id" jdbcType="INTEGER"/>
        <result property="positionId" column="position_id" jdbcType="INTEGER"/>
        <result property="topDegree" column="top_degree" jdbcType="INTEGER"/>
        <result property="specialty" column="specialty" jdbcType="VARCHAR"/>
        <result property="school" column="school" jdbcType="VARCHAR"/>
        <result property="workState" column="work_state" jdbcType="INTEGER"/>
        <result property="workId" column="work_id" jdbcType="BIGINT"/>
        <result property="contractTerm" column="contract_term" jdbcType="INTEGER"/>
        <result property="workAge" column="work_age" jdbcType="DOUBLE"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="conversionTime" column="conversion_time" jdbcType="TIMESTAMP"/>
        <result property="departureTime" column="departure_time" jdbcType="TIMESTAMP"/>
        <result property="beginContractTime" column="begin_contract_time" jdbcType="TIMESTAMP"/>
        <result property="endContractTime" column="end_contract_time" jdbcType="TIMESTAMP"/>
        <result property="enabled" column="enabled" jdbcType="BOOLEAN"/>
    </resultMap>

    <resultMap id="UserAccountVoMap" type="com.cyrus.final_job.entity.vo.UserAccountVo">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="realName" column="real_name" jdbcType="VARCHAR"/>
        <result property="workId" column="work_id" jdbcType="BIGINT"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        where id = #{id}
    </select>

    <select id="loadUserByUsername" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        where username = #{username}
    </select>

    <select id="queryByDepartmentId" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        where department_id = #{depId} and enabled = true
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        limit #{offset}, #{limit}
    </select>

    <select id="getMaxWorkId" resultType="long">
        select max(work_id) from final_job.user;
    </select>

    <select id="export" resultMap="UserVoMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        order by create_time
    </select>

    <select id="queryStaffByCondition" resultMap="UserVoMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        <where>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="nationId != null">
                and nation_id = #{nationId}
            </if>
            <if test="politicsId != null">
                and politics_id = #{politicsId}
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                and native_place = #{nativePlace}
            </if>
            <if test="positionId != null">
                and position_id = #{positionId}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="topDegree != null">
                and top_degree = #{topDegree}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="wedlock != null">
                and wedlock = #{wedlock}
            </if>
            <if test="workState != null">
                and work_state = #{workState}
            </if>
            <if test="createTimeStart != null and createTimeEnd != null">
                and create_time between #{createTimeStart} and #{createTimeEnd}
            </if>
            <if test="departureTimeStart != null and departureTimeEnd != null">
                and departure_time between #{createTimeStart} and #{createTimeEnd}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%' + realName + '%'"/>
                and real_name like #{realName}
            </if>
            <if test="username != null and username != ''">
                <bind name="username" value="'%' + username + '%'"/>
                and username like #{username}
            </if>
        </where>
        order by create_time desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="queryUserAccountByCondition" resultMap="UserAccountVoMap">
        select id,username,real_name,enabled,work_id
        from final_job.user
        <where>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%' + realName + '%'"/>
                and real_name like #{realName}
            </if>
            <if test="username != null and username != ''">
                <bind name="username" value="'%' + username + '%'"/>
                and username like #{username}
            </if>
        </where>
        order by create_time desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="getUserByUserAccountSetCondition" resultMap="UserMap">
        select id,real_name,work_id,phone,department_id,position_id
        from final_job.user
        where enabled = true
        <if test="workId != null">
            and work_id = #{workId}
        </if>
        <if test="departmentId != null">
            and department_id = #{departmentId}
        </if>
        <if test="realName != null and realName != ''">
            <bind name="realName" value="'%' + realName + '%'"/>
            and real_name like #{realName}
        </if>
        order by create_time desc
        limit #{offset}, #{pageSize}
    </select>

    <select id="getUserByUserAccountSetConditionCount" resultType="long">
        select count(*)
        from final_job.user
        where enabled = true
        <if test="workId != null">
            and work_id = #{workId}
        </if>
        <if test="departmentId != null">
            and department_id = #{departmentId}
        </if>
        <if test="realName != null and realName != ''">
            <bind name="realName" value="'%' + realName + '%'"/>
            and real_name like #{realName}
        </if>
    </select>


    <select id="queryUserAccountCountByCondition" resultType="long">
        select count(*)
        from final_job.user
        <where>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%' + realName + '%'"/>
                and real_name like #{realName}
            </if>
            <if test="username != null and username != ''">
                <bind name="username" value="'%' + username + '%'"/>
                and username like #{username}
            </if>
        </where>
    </select>

    <select id="queryStaffCountByCondition" resultType="long">
        <bind name="realName" value="'%' + realName + '%'"/>
        select count(*)
        from final_job.user
        <where>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="nationId != null">
                and nation_id = #{nationId}
            </if>
            <if test="politicsId != null">
                and politics_id = #{politicsId}
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                and native_place = #{nativePlace}
            </if>
            <if test="positionId != null">
                and position_id = #{positionId}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="topDegree != null">
                and top_degree = #{topDegree}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="wedlock != null">
                and wedlock = #{wedlock}
            </if>
            <if test="workState != null">
                and work_state = #{workState}
            </if>
            <if test="createTimeStart != null and createTimeEnd != null">
                and create_time between #{createTimeStart} and #{createTimeEnd}
            </if>
            <if test="departureTimeStart != null and departureTimeEnd != null">
                and departure_time between #{createTimeStart} and #{createTimeEnd}
            </if>
            <if test="realName != null and realName != ''">
                and real_name like #{realName}
            </if>
        </where>
    </select>

    <select id="selectAll" resultMap="UserMap">
        select id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="userFace != null and userFace != ''">
                and user_face = #{userFace}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%' + realName + '%'"/>
                and real_name like #{realName}
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="birthday != null">
                and birthday = #{birthday}
            </if>
            <if test="idCard != null and idCard != ''">
                and id_card = #{idCard}
            </if>
            <if test="wedlock != null">
                and wedlock = #{wedlock}
            </if>
            <if test="nationId != null">
                and nation_id = #{nationId}
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                and native_place = #{nativePlace}
            </if>
            <if test="politicsId != null">
                and politics_id = #{politicsId}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="address != null and address != ''">
                and address = #{address}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="positionId != null">
                and position_id = #{positionId}
            </if>
            <if test="topDegree != null">
                and top_degree = #{topDegree}
            </if>
            <if test="specialty != null and specialty != ''">
                and specialty = #{specialty}
            </if>
            <if test="school != null and school != ''">
                and school = #{school}
            </if>
            <if test="workState != null">
                and work_state = #{workState}
            </if>
            <if test="workId != null and workId != ''">
                and work_id = #{workId}
            </if>
            <if test="contractTerm != null">
                and contract_term = #{contractTerm}
            </if>
            <if test="workAge != null">
                and work_age = #{workAge}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="conversionTime != null">
                and conversion_time = #{conversionTime}
            </if>
            <if test="departureTime != null">
                and departure_time = #{departureTime}
            </if>
            <if test="beginContractTime != null">
                and begin_contract_time = #{beginContractTime}
            </if>
            <if test="endContractTime != null">
                and end_contract_time = #{endContractTime}
            </if>
            <if test="enabled != null">
                and enabled = #{enabled}
            </if>
        </where>
    </select>

    <select id="queryLeave" resultMap="UserMap">
        select
          id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled
        from final_job.user
        where enabled = false
        and departure_time between #{startTime} and #{endTime}
    </select>

    <select id="queryAllByContractCondition" resultMap="UserMap">
        select
        id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place,
        politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state,
        work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time,
        begin_contract_time, end_contract_time, enabled
        from final_job.user
        <where>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="workState != null">
                and work_state = #{workState}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%'+realName+'%'"/>
                and real_name like #{realName}
            </if>
        </where>
        limit #{offset},#{pageSize}
    </select>

    <select id="getAllUsersExceptOne" resultMap="UserMap">
        select
        id, username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place,
        politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state,
        work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time,
        begin_contract_time, end_contract_time, enabled
        from final_job.user
        where enabled = true and id != #{id}
    </select>

    <select id="queryAllByContractConditionCount" resultType="long">
        select count(*)
        from final_job.user
        <where>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
            <if test="departmentId != null">
                and department_id = #{departmentId}
            </if>
            <if test="workState != null">
                and work_state = #{workState}
            </if>
            <if test="realName != null and realName != ''">
                <bind name="realName" value="'%'+realName+'%'"/>
                and real_name like #{realName}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into final_job.user(username, password, user_face, real_name, gender, birthday, id_card, wedlock, nation_id, native_place, politics_id, email, phone, address, department_id, position_id, top_degree, specialty, school, work_state, work_id, contract_term, work_age, create_time, update_time, conversion_time, departure_time, begin_contract_time, end_contract_time, enabled)
        values (#{username}, #{password}, #{userFace}, #{realName}, #{gender}, #{birthday}, #{idCard}, #{wedlock}, #{nationId}, #{nativePlace}, #{politicsId}, #{email}, #{phone}, #{address}, #{departmentId}, #{positionId}, #{topDegree}, #{specialty}, #{school}, #{workState}, #{workId}, #{contractTerm}, #{workAge}, #{createTime}, #{updateTime}, #{conversionTime}, #{departureTime}, #{beginContractTime}, #{endContractTime}, #{enabled})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update final_job.user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="userFace != null and userFace != ''">
                user_face = #{userFace},
            </if>
            <if test="realName != null and realName != ''">
                real_name = #{realName},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="idCard != null and idCard != ''">
                id_card = #{idCard},
            </if>
            <if test="wedlock != null">
                wedlock = #{wedlock},
            </if>
            <if test="nationId != null">
                nation_id = #{nationId},
            </if>
            <if test="nativePlace != null and nativePlace != ''">
                native_place = #{nativePlace},
            </if>
            <if test="politicsId != null">
                politics_id = #{politicsId},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId},
            </if>
            <if test="positionId != null">
                position_id = #{positionId},
            </if>
            <if test="topDegree != null">
                top_degree = #{topDegree},
            </if>
            <if test="specialty != null and specialty != ''">
                specialty = #{specialty},
            </if>
            <if test="school != null and school != ''">
                school = #{school},
            </if>
            <if test="workState != null">
                work_state = #{workState},
            </if>
            <if test="workId != null and workId != ''">
                work_id = #{workId},
            </if>
            <if test="contractTerm != null">
                contract_term = #{contractTerm},
            </if>
            <if test="workAge != null">
                work_age = #{workAge},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="conversionTime != null">
                conversion_time = #{conversionTime},
            </if>
            <if test="departureTime != null">
                departure_time = #{departureTime},
            </if>
            <if test="beginContractTime != null">
                begin_contract_time = #{beginContractTime},
            </if>
            <if test="endContractTime != null">
                end_contract_time = #{endContractTime},
            </if>
            <if test="enabled != null">
                enabled = #{enabled},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from final_job.user where id = #{id}
    </delete>

</mapper>